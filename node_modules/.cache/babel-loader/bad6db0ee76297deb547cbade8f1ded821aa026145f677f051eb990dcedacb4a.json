{"ast":null,"code":"var _jsxFileName = \"/Users/alioguzdogru/Downloads/Frontend/src/Components/Navbar/Navbar.jsx\",\n  _s = $RefreshSig$();\nimport { Link, useLocation } from 'react-router-dom';\nimport './Navbar.css';\nimport logo from \"../Assets/logo-white.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Navbar = () => {\n  _s();\n  const location = useLocation();\n  const isLoginPage = location.pathname === \"/login\";\n  const isSignUpPage = location.pathname === \"/signup\";\n  const isDashboard = location.pathname === \"/dashboard\";\n\n  // Conditionally render the Navbar only if not on the dashboard page\n  if (isDashboard) {\n    return null; // Don't render the Navbar\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        alt: \"Logo\",\n        className: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [!isLoginPage && /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/login\",\n          className: `button ${isSignUpPage ? \"gray\" : \"\"}`,\n          children: \"Log in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this), !isSignUpPage && /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/signup\",\n          className: \"button gray\",\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(Navbar, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n_c = Navbar;\nexport default Navbar;\nvar _c;\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"names":["Link","useLocation","logo","jsxDEV","_jsxDEV","Navbar","_s","location","isLoginPage","pathname","isSignUpPage","isDashboard","children","to","src","alt","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/alioguzdogru/Downloads/Frontend/src/Components/Navbar/Navbar.jsx"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\nimport './Navbar.css';\nimport logo from \"../Assets/logo-white.png\";\n\n\nconst Navbar = () => {\n  const location = useLocation();\n\n  const isLoginPage = location.pathname === \"/login\";\n  const isSignUpPage = location.pathname === \"/signup\";\n  const isDashboard = location.pathname === \"/dashboard\";\n\n  // Conditionally render the Navbar only if not on the dashboard page\n  if (isDashboard) {\n    return null; // Don't render the Navbar\n  }\n\n  return (\n    <nav>\n      <Link to=\"/\">\n        <img src={logo} alt=\"Logo\" className=\"logo\" />\n      </Link>\n      <ul>\n        {!isLoginPage && (\n          <li>\n            <Link to=\"/login\" className={`button ${isSignUpPage ? \"gray\" : \"\"}`}>Log in</Link>\n          </li>\n        )}\n        {!isSignUpPage && (\n          <li>\n            <Link to=\"/signup\" className=\"button gray\">Sign Up</Link>\n          </li>\n        )}\n      </ul>\n    </nav>\n  );\n}\n\nexport default Navbar;\n"],"mappings":";;AAAA,SAASA,IAAI,EAAEC,WAAW,QAAQ,kBAAkB;AACpD,OAAO,cAAc;AACrB,OAAOC,IAAI,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG5C,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAMC,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAE9B,MAAMO,WAAW,GAAGD,QAAQ,CAACE,QAAQ,KAAK,QAAQ;EAClD,MAAMC,YAAY,GAAGH,QAAQ,CAACE,QAAQ,KAAK,SAAS;EACpD,MAAME,WAAW,GAAGJ,QAAQ,CAACE,QAAQ,KAAK,YAAY;;EAEtD;EACA,IAAIE,WAAW,EAAE;IACf,OAAO,IAAI,CAAC,CAAC;EACf;;EAEA,oBACEP,OAAA;IAAAQ,QAAA,gBACER,OAAA,CAACJ,IAAI;MAACa,EAAE,EAAC,GAAG;MAAAD,QAAA,eACVR,OAAA;QAAKU,GAAG,EAAEZ,IAAK;QAACa,GAAG,EAAC,MAAM;QAACC,SAAS,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C,CAAC,eACPhB,OAAA;MAAAQ,QAAA,GACG,CAACJ,WAAW,iBACXJ,OAAA;QAAAQ,QAAA,eACER,OAAA,CAACJ,IAAI;UAACa,EAAE,EAAC,QAAQ;UAACG,SAAS,EAAG,UAASN,YAAY,GAAG,MAAM,GAAG,EAAG,EAAE;UAAAE,QAAA,EAAC;QAAM;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChF,CACL,EACA,CAACV,YAAY,iBACZN,OAAA;QAAAQ,QAAA,eACER,OAAA,CAACJ,IAAI;UAACa,EAAE,EAAC,SAAS;UAACG,SAAS,EAAC,aAAa;UAAAJ,QAAA,EAAC;QAAO;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvD,CACL;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAAAd,EAAA,CA/BKD,MAAM;EAAA,QACOJ,WAAW;AAAA;AAAAoB,EAAA,GADxBhB,MAAM;AAiCZ,eAAeA,MAAM;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}