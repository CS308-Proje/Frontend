{"ast":null,"code":"var _jsxFileName = \"/Users/alioguzdogru/Downloads/Frontend/src/Components/Dashboard/Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport FavoriteBorderIcon from '@mui/icons-material/FavoriteBorder';\nimport FavoriteIcon from '@mui/icons-material/Favorite';\nimport Sidebar from '../Sidebar/Sidebar';\nimport './Dashboard.css';\nimport Navbar2 from '../Navbar2/Navbar2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [sidebarOpen, setSidebarOpen] = useState(false);\n  const navigate = useNavigate();\n  const [songs, setSongs] = useState([]);\n  const [search, setSearch] = useState(\"\");\n\n  // Format date\n  const formatDate = dateString => {\n    const options = {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    };\n    return new Date(dateString).toLocaleDateString(undefined, options);\n  };\n\n  // Fetch songs data\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/songs', {\n          method: 'GET',\n          credentials: 'include',\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        const data = await response.json();\n        const songsWithLikeStatus = data.songs.map(song => ({\n          ...song,\n          liked: false\n        }));\n        setSongs(songsWithLikeStatus);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchData();\n  }, []);\n\n  // Toggle like status\n  const toggleLike = songId => {\n    setSongs(songs.map(song => song._id === songId ? {\n      ...song,\n      liked: !song.liked\n    } : song));\n  };\n\n  // Render song boxes\n  const renderSongBoxes = () => {\n    return songs.map(song => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"song-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: song.albumImg,\n        className: \"artist-img\",\n        alt: `Artist ${song.id}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-box\",\n          children: song.songName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-box\",\n          children: [\"Artist: \", song.mainArtistName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-box\",\n          children: [\"Album: \", song.albumName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"text-box\",\n          children: [\"Rating: \", song.ratingValue]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"text-box\",\n          children: [\"Release Date: \", formatDate(song.release_date)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"like-btn\",\n          \"aria-label\": `Like ${song.songName}`,\n          onClick: () => toggleLike(song._id),\n          children: song.liked ? /*#__PURE__*/_jsxDEV(FavoriteIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 27\n          }, this) : /*#__PURE__*/_jsxDEV(FavoriteBorderIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 46\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, song._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar2, {\n      sidebarOpen: sidebarOpen,\n      setSidebarOpen: setSidebarOpen,\n      setSearch: setSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Sidebar, {\n      isOpen: sidebarOpen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: `main-content ${sidebarOpen ? 'shifted' : ''}`,\n      children: renderSongBoxes()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"XBPE8AxEG6rC9axqjgJelYYmw2o=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","FavoriteBorderIcon","FavoriteIcon","Sidebar","Navbar2","jsxDEV","_jsxDEV","Dashboard","_s","sidebarOpen","setSidebarOpen","navigate","songs","setSongs","search","setSearch","formatDate","dateString","options","year","month","day","Date","toLocaleDateString","undefined","fetchData","response","fetch","method","credentials","headers","data","json","songsWithLikeStatus","map","song","liked","error","console","toggleLike","songId","_id","renderSongBoxes","className","children","src","albumImg","alt","id","fileName","_jsxFileName","lineNumber","columnNumber","songName","mainArtistName","albumName","ratingValue","release_date","onClick","isOpen","_c","$RefreshReg$"],"sources":["/Users/alioguzdogru/Downloads/Frontend/src/Components/Dashboard/Dashboard.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport FavoriteBorderIcon from '@mui/icons-material/FavoriteBorder';\nimport FavoriteIcon from '@mui/icons-material/Favorite';\nimport Sidebar from '../Sidebar/Sidebar';\nimport './Dashboard.css';\nimport Navbar2 from '../Navbar2/Navbar2';\n\nconst Dashboard = () => {\n  const [sidebarOpen, setSidebarOpen] = useState(false);\n  const navigate = useNavigate();\n  const [songs, setSongs] = useState([]);\n  const [search, setSearch] = useState(\"\");\n\n\n  // Format date\n  const formatDate = (dateString) => {\n    const options = { year: 'numeric', month: 'long', day: 'numeric' };\n    return new Date(dateString).toLocaleDateString(undefined, options);\n  };\n\n  // Fetch songs data\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/songs', {\n          method: 'GET',\n          credentials: 'include',\n          headers: { 'Content-Type': 'application/json' },\n        });\n        const data = await response.json();\n        const songsWithLikeStatus = data.songs.map(song => ({ ...song, liked: false }));\n        setSongs(songsWithLikeStatus);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchData();\n  }, []);\n\n  // Toggle like status\n  const toggleLike = (songId) => {\n    setSongs(songs.map(song => \n      song._id === songId ? { ...song, liked: !song.liked } : song\n    ));\n  };\n\n  // Render song boxes\n  const renderSongBoxes = () => {\n    return songs.map((song) => (\n      <div key={song._id} className=\"song-box\">\n        <img src={song.albumImg} className=\"artist-img\" alt={`Artist ${song.id}`} />\n        <div>\n          <h1 className=\"text-box\">{song.songName}</h1>\n          <h2 className=\"text-box\">Artist: {song.mainArtistName}</h2>\n          <h3 className=\"text-box\">Album: {song.albumName}</h3>\n          <h4 className=\"text-box\">Rating: {song.ratingValue}</h4>\n          <h5 className=\"text-box\">Release Date: {formatDate(song.release_date)}</h5>\n          {/* Like Button */}\n          <button className=\"like-btn\" aria-label={`Like ${song.songName}`} onClick={() => toggleLike(song._id)}>\n            {song.liked ? <FavoriteIcon /> : <FavoriteBorderIcon />}\n          </button>\n        </div>\n      </div>\n    ));\n  };\n\n  return (\n    <div className=\"Dashboard\">\n      <Navbar2 sidebarOpen = {sidebarOpen} setSidebarOpen={setSidebarOpen} setSearch={setSearch}/>\n\n      <Sidebar isOpen={sidebarOpen} />\n\n      <main className={`main-content ${sidebarOpen ? 'shifted' : ''}`}>\n        {renderSongBoxes()}\n      </main>\n    </div>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}