{"ast":null,"code":"var _jsxFileName = \"/Users/alioguzdogru/Downloads/Frontend/src/Components/Authentication/Auth.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  // Initialize isLoggedIn state from local storage\n  const [isLoggedIn, setIsLoggedIn] = useState(localStorage.getItem('isLoggedIn') === 'true');\n  const login = () => {\n    setIsLoggedIn(true);\n    localStorage.setItem('isLoggedIn', 'true'); // Save state in local storage\n  };\n\n  const logout = () => {\n    setIsLoggedIn(false);\n    localStorage.setItem('isLoggedIn', 'false'); // Update state in local storage\n  };\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isLoggedIn,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"eApvoqjHX/cXuUJqdVdlHhEav2s=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","isLoggedIn","setIsLoggedIn","localStorage","getItem","login","setItem","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/alioguzdogru/Downloads/Frontend/src/Components/Authentication/Auth.jsx"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => useContext(AuthContext);\n\nexport const AuthProvider = ({ children }) => {\n  // Initialize isLoggedIn state from local storage\n  const [isLoggedIn, setIsLoggedIn] = useState(localStorage.getItem('isLoggedIn') === 'true');\n\n  const login = () => {\n    setIsLoggedIn(true);\n    localStorage.setItem('isLoggedIn', 'true'); // Save state in local storage\n  };\n\n  const logout = () => {\n    setIsLoggedIn(false);\n    localStorage.setItem('isLoggedIn', 'false'); // Update state in local storage\n  };\n\n  return (\n    <AuthContext.Provider value={{ isLoggedIn, login, logout }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMO,OAAO,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAAMN,UAAU,CAACI,WAAW,CAAC;AAAA;AAACE,EAAA,CAAxCD,OAAO;AAEpB,OAAO,MAAME,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC5C;EACA,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAACa,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,KAAK,MAAM,CAAC;EAE3F,MAAMC,KAAK,GAAGA,CAAA,KAAM;IAClBH,aAAa,CAAC,IAAI,CAAC;IACnBC,YAAY,CAACG,OAAO,CAAC,YAAY,EAAE,MAAM,CAAC,CAAC,CAAC;EAC9C,CAAC;;EAED,MAAMC,MAAM,GAAGA,CAAA,KAAM;IACnBL,aAAa,CAAC,KAAK,CAAC;IACpBC,YAAY,CAACG,OAAO,CAAC,YAAY,EAAE,OAAO,CAAC,CAAC,CAAC;EAC/C,CAAC;;EAED,oBACEZ,OAAA,CAACC,WAAW,CAACa,QAAQ;IAACC,KAAK,EAAE;MAAER,UAAU;MAAEI,KAAK;MAAEE;IAAO,CAAE;IAAAR,QAAA,EACxDA;EAAQ;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACb,GAAA,CAnBWF,YAAY;AAAAgB,EAAA,GAAZhB,YAAY;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}