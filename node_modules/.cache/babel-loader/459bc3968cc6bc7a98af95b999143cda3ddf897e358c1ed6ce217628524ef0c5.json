{"ast":null,"code":"var _jsxFileName = \"/Users/alioguzdogru/Downloads/Frontend/src/Components/Friends/Friends.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from \"react-router-dom\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport UserIcon from \"@mui/icons-material/AccountCircle\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport LogoImage from \"../Assets/logo-white.png\";\nimport Sidebar from \"../Sidebar/Sidebar\";\nimport './Friends.css'; // Assuming you have similar styles defined as in MyAlbums.css\nimport LogoutIcon from '@mui/icons-material/Logout'; // Import Logout icon\nimport { useAuth } from '../Authentication/Auth';\nimport PersonRemoveIcon from '@mui/icons-material/PersonRemove';\nimport ToggleOnIcon from '@mui/icons-material/ToggleOn';\nimport ToggleOffIcon from '@mui/icons-material/ToggleOff';\nimport Tooltip from '@mui/material/Tooltip';\nimport Navbar2 from \"../Navbar2/Navbar2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Friends = () => {\n  _s();\n  const [sidebarOpen, setSidebarOpen] = useState(false);\n  const navigate = useNavigate();\n  const {\n    logout\n  } = useAuth();\n  const [search, setSearch] = useState(\"\");\n  const [friendRemoved, setFriendRemoved] = useState(false);\n  const [friends, setFriends] = useState([]); // Changed from setUsername to setFriends\n  const [username, setUsername] = useState(''); // Changed from setFriendName to setUsername\n\n  const [invitations, setInvitations] = useState([]);\n  const [invitationChanged, setInvitationChanged] = useState(false);\n  useEffect(() => {\n    const fetchInvitations = async () => {\n      try {\n        const response = await fetch('http://localhost:5001/invitation/getallinv', {\n          method: 'GET',\n          credentials: 'include',\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        if (!response.ok) {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n        const data = await response.json();\n        setInvitations(data.invitations || []);\n        console.log(data);\n        console.log(data.invitations);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n        setInvitations([]);\n      }\n    };\n    const fetchFriends = async () => {\n      try {\n        // Fetch the current user's details to get the allowFriendRecommendations array\n        const userResponse = await fetch('http://localhost:5001/user/details', {\n          method: 'GET',\n          credentials: 'include',\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        if (!userResponse.ok) {\n          throw new Error(`HTTP error! Status: ${userResponse.status}`);\n        }\n        const userData = await userResponse.json();\n        const allowedFriends = new Set(userData.allowFriendRecommendations || []);\n\n        // Fetch all friends\n        const response = await fetch('http://localhost:5001/friends/all', {\n          method: 'GET',\n          credentials: 'include',\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        if (!response.ok) {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n        const data = await response.json();\n        const updatedFriends = data.friends.map(friend => ({\n          ...friend,\n          // Set isActive based on whether they are in the allowedFriends set\n          isActive: allowedFriends.has(friend._id)\n        }));\n        setFriends(updatedFriends);\n      } catch (error) {\n        console.error('Error fetching friends:', error);\n        setFriends([]);\n      }\n    };\n    fetchInvitations();\n    fetchFriends();\n  }, [friendRemoved, invitationChanged]);\n  const acceptInvitation = async invitationId => {\n    try {\n      const response = await fetch(`http://localhost:5001/invitation/update/${invitationId}`, {\n        method: 'POST',\n        credentials: 'include',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          invitationId,\n          status: \"accepted\"\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      setInvitations(prevInvitations => prevInvitations.filter(invitation => invitation._id !== invitationId));\n      setInvitationChanged(true);\n      const newFriendData = await response.json();\n      if (newFriendData && newFriendData.newFriend) {\n        setFriends(prevFriends => [...prevFriends, newFriendData.newFriend]);\n      }\n    } catch (error) {\n      console.error('Error accepting invitation:', error);\n    }\n  };\n  const rejectInvitation = async invitationId => {\n    try {\n      const response = await fetch(`http://localhost:5001/invitation/update/${invitationId}`, {\n        method: 'POST',\n        credentials: 'include',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          invitationId,\n          status: \"rejected\"\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n\n      // Remove the rejected invitation from the invitations array\n      setInvitations(prevInvitations => prevInvitations.filter(invitation => invitation._id !== invitationId));\n      console.log(`Invitation with ID ${invitationId} rejected.`);\n    } catch (error) {\n      console.error('Error rejecting invitation:', error);\n    }\n  };\n  const toggleFriendActive = async (id, isActive) => {\n    // Update the local state first\n    setFriends(friends.map(friend => {\n      if (friend._id === id) {\n        return {\n          ...friend,\n          isActive: !isActive\n        };\n      }\n      return friend;\n    }));\n    const endpoint = isActive ? `disallowfriend/${id}` : `allowfriend/${id}`;\n\n    // Make API call to update friend's status on the server\n    try {\n      const response = await fetch(`http://localhost:5001/friends/${endpoint}`, {\n        method: 'POST',\n        // Or the appropriate method for your endpoint\n        credentials: 'include',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n\n      // Handle the response here\n      const data = await response.json();\n      console.log('Friend status updated:', data);\n    } catch (error) {\n      console.error('Error updating friend status:', error);\n\n      // Revert the state change if the API call failed\n      setFriends(friends.map(friend => {\n        if (friend._id === id) {\n          return {\n            ...friend,\n            isActive: isActive\n          };\n        }\n        return friend;\n      }));\n    }\n  };\n  const handleInputChange = event => {\n    setUsername(event.target.value);\n  };\n  const removeFriend = async friendId => {\n    try {\n      const response = await fetch(`http://localhost:5001/friends/remove/${friendId}`, {\n        method: 'DELETE',\n        credentials: 'include',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      setFriends(prevFriends => prevFriends.filter(friend => friend.id !== friendId));\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      const data = await response.json();\n      if (data.success) {\n        // Update state only if the API call was successful\n        setFriends(prevFriends => prevFriends.filter(friend => friend.id !== friendId));\n        console.log(`Friend with ID ${friendId} removed.`);\n      } else {\n        console.error('Error removing friend:', data.message);\n      }\n    } catch (error) {\n      console.error('Error removing friend:', error);\n    }\n    setFriendRemoved(true);\n  };\n  const handleSubmit = async () => {\n    // Check if the username is not empty and not already in the friends list\n    if (username && !friends.some(friend => friend.name === username)) {\n      try {\n        // Send an invitation to the target user\n        const targetUserId = username; // Assuming username is the target user ID\n        const response = await fetch(`http://localhost:5001/invitation/createInvitation/${targetUserId}`, {\n          method: 'POST',\n          credentials: 'include',\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        if (!response.ok) {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n\n        // Invitation sent successfully\n        console.log(`Invitation sent to user ${targetUserId}`);\n\n        // You can update the UI to show that the invitation is sent here if needed\n      } catch (error) {\n        console.error('Error sending invitation:', error);\n        return;\n      }\n\n      // Clear the input field after sending the invitation\n      setUsername('');\n    }\n  };\n\n  // Navigate to profile page\n  const navigateToProfile = () => {\n    navigate(\"/friends\");\n  };\n\n  // Handle search input\n  const handleSearch = event => {\n    console.log(\"Searching for:\", event.target.value);\n    setSearch(event.target.value);\n  };\n\n  // Sign out function\n  const handleSignOut = () => {\n    logout();\n    navigate('/');\n  };\n\n  // Navigate to profile page\n  const navigateToFriends = () => {\n    navigate(\"/friends\"); // Adjust the route as necessary\n  };\n\n  // Navigate to dashboard\n  const navigateToDashboard = () => {\n    navigate(\"/dashboard\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar2, {\n      sidebarOpen: sidebarOpen,\n      setSidebarOpen: setSidebarOpen,\n      setSearch: setSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Sidebar, {\n      isOpen: sidebarOpen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: `main-content ${sidebarOpen ? \"shifted\" : \"\"}`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"friends-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"friends-heading\",\n            children: \"Add a New Friend\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: username,\n            onChange: handleInputChange,\n            placeholder: \"Enter your friend's username\",\n            className: \"add-friend-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSubmit,\n            className: \"add-friend-button\",\n            children: \"Add Friend\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"friends-list\",\n            children: friends.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"no-friends-message\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"No friends added yet!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 326,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Add a new friend using the input above.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 327,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 15\n            }, this) : friends.map(friend => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"friend-box\",\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                className: \"text-box\",\n                children: friend.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 332,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"friend-actions\",\n                children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n                  title: friend.isActive ? \"Deactivate Recommendation\" : \"Activate Recommendation\",\n                  children: friend.isActive ? /*#__PURE__*/_jsxDEV(ToggleOnIcon, {\n                    style: {\n                      fontSize: '4rem'\n                    } // Adjust the size as needed\n                    ,\n                    className: \"toggle-friend-btn active\",\n                    onClick: () => toggleFriendActive(friend._id, friend.isActive)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 336,\n                    columnNumber: 25\n                  }, this) : /*#__PURE__*/_jsxDEV(ToggleOffIcon, {\n                    style: {\n                      fontSize: '4rem'\n                    } // Adjust the size as needed\n                    ,\n                    className: \"toggle-friend-btn\",\n                    onClick: () => toggleFriendActive(friend._id, friend.isActive)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 342,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 334,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                  title: \"Remove Friend\",\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => removeFriend(friend._id),\n                    className: \"remove-friend-btn\",\n                    \"aria-label\": \"Remove friend\",\n                    children: /*#__PURE__*/_jsxDEV(PersonRemoveIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 355,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 350,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 349,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 333,\n                columnNumber: 19\n              }, this)]\n            }, friend.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"invitations-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"invitations-heading\",\n            children: \"Incoming Friend Invitations\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 9\n          }, this), invitations && invitations.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"no-invitations-message\",\n            children: \"No incoming invitations.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 11\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"invitations-list\",\n            children: invitations.map(invitation => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"invitation-box\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"invitation-text\",\n                children: [\"Invitation from User ID: \", invitation.user_id]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 374,\n                columnNumber: 7\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"invitation-actions\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => acceptInvitation(invitation._id),\n                  className: \"invitation-accept-btn\",\n                  children: \"Accept\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 376,\n                  columnNumber: 9\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => rejectInvitation(invitation._id),\n                  className: \"invitation-reject-btn\",\n                  children: \"Reject\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 379,\n                  columnNumber: 9\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 375,\n                columnNumber: 7\n              }, this)]\n            }, invitation._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 5\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 302,\n    columnNumber: 5\n  }, this);\n};\n_s(Friends, \"g3GUgmI48JOzjvA2qJzRtDtV3G0=\", false, function () {\n  return [useNavigate, useAuth];\n});\n_c = Friends;\nexport default Friends;\nvar _c;\n$RefreshReg$(_c, \"Friends\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","MenuIcon","UserIcon","SearchIcon","LogoImage","Sidebar","LogoutIcon","useAuth","PersonRemoveIcon","ToggleOnIcon","ToggleOffIcon","Tooltip","Navbar2","jsxDEV","_jsxDEV","Friends","_s","sidebarOpen","setSidebarOpen","navigate","logout","search","setSearch","friendRemoved","setFriendRemoved","friends","setFriends","username","setUsername","invitations","setInvitations","invitationChanged","setInvitationChanged","fetchInvitations","response","fetch","method","credentials","headers","ok","Error","status","data","json","console","log","error","fetchFriends","userResponse","userData","allowedFriends","Set","allowFriendRecommendations","updatedFriends","map","friend","isActive","has","_id","acceptInvitation","invitationId","body","JSON","stringify","prevInvitations","filter","invitation","newFriendData","newFriend","prevFriends","rejectInvitation","toggleFriendActive","id","endpoint","handleInputChange","event","target","value","removeFriend","friendId","success","message","handleSubmit","some","name","targetUserId","navigateToProfile","handleSearch","handleSignOut","navigateToFriends","navigateToDashboard","className","children","fileName","_jsxFileName","lineNumber","columnNumber","isOpen","type","onChange","placeholder","onClick","length","title","style","fontSize","user_id","_c","$RefreshReg$"],"sources":["/Users/alioguzdogru/Downloads/Frontend/src/Components/Friends/Friends.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from \"react-router-dom\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport UserIcon from \"@mui/icons-material/AccountCircle\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport LogoImage from \"../Assets/logo-white.png\";\nimport Sidebar from \"../Sidebar/Sidebar\";\nimport './Friends.css'; // Assuming you have similar styles defined as in MyAlbums.css\nimport LogoutIcon from '@mui/icons-material/Logout'; // Import Logout icon\nimport { useAuth } from '../Authentication/Auth';\nimport PersonRemoveIcon from '@mui/icons-material/PersonRemove';\nimport ToggleOnIcon from '@mui/icons-material/ToggleOn';\nimport ToggleOffIcon from '@mui/icons-material/ToggleOff';\nimport Tooltip from '@mui/material/Tooltip';\nimport Navbar2 from \"../Navbar2/Navbar2\"\n\nconst Friends = () => {\n  const [sidebarOpen, setSidebarOpen] = useState(false);\n  const navigate = useNavigate();\n  const { logout } = useAuth();\n  const [search, setSearch] = useState(\"\");\n  const [friendRemoved, setFriendRemoved] = useState(false);\n\n  const [friends, setFriends] = useState([]); // Changed from setUsername to setFriends\n  const [username, setUsername] = useState(''); // Changed from setFriendName to setUsername\n\n  const [invitations, setInvitations] = useState([]);\n  const [invitationChanged, setInvitationChanged] = useState(false);\n\n  \n\n\n  useEffect(() => {\n    const fetchInvitations = async () => {\n      try {\n        const response = await fetch('http://localhost:5001/invitation/getallinv', {\n          method: 'GET',\n          credentials: 'include', \n          headers: { 'Content-Type': 'application/json' },\n        });\n        if (!response.ok) {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n        const data = await response.json();\n        setInvitations(data.invitations || []); \n        console.log(data);\n        console.log(data.invitations);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n        setInvitations([]); \n      }\n    };\n\n    const fetchFriends = async () => {\n      try {\n        // Fetch the current user's details to get the allowFriendRecommendations array\n        const userResponse = await fetch('http://localhost:5001/user/details', {\n          method: 'GET',\n          credentials: 'include',\n          headers: { 'Content-Type': 'application/json' },\n        });\n    \n        if (!userResponse.ok) {\n          throw new Error(`HTTP error! Status: ${userResponse.status}`);\n        }\n    \n        const userData = await userResponse.json();\n        const allowedFriends = new Set(userData.allowFriendRecommendations || []);\n    \n        // Fetch all friends\n        const response = await fetch('http://localhost:5001/friends/all', {\n          method: 'GET',\n          credentials: 'include',\n          headers: { 'Content-Type': 'application/json' },\n        });\n    \n        if (!response.ok) {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n    \n        const data = await response.json();\n        const updatedFriends = data.friends.map(friend => ({\n          ...friend,\n          // Set isActive based on whether they are in the allowedFriends set\n          isActive: allowedFriends.has(friend._id)\n        }));\n    \n        setFriends(updatedFriends);\n      } catch (error) {\n        console.error('Error fetching friends:', error);\n        setFriends([]);\n      }\n    };\n    \n\n\n  \n    fetchInvitations(); \n    fetchFriends(); \n    \n  }, [friendRemoved, invitationChanged]);\n  \n  \n  \n  const acceptInvitation = async (invitationId) => {\n    try {\n      const response = await fetch(`http://localhost:5001/invitation/update/${invitationId}`, {\n        method: 'POST',\n        credentials: 'include',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ invitationId, status: \"accepted\" })\n      });\n  \n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n  \n      setInvitations(prevInvitations => prevInvitations.filter(invitation => invitation._id !== invitationId));\n      setInvitationChanged(true);\n      const newFriendData = await response.json();\n      if (newFriendData && newFriendData.newFriend) {\n        setFriends(prevFriends => [...prevFriends, newFriendData.newFriend]);\n      }\n  \n    } catch (error) {\n      console.error('Error accepting invitation:', error);\n    }\n  };\n  \n  \n  \n  const rejectInvitation = async (invitationId) => {\n    try {\n      const response = await fetch(`http://localhost:5001/invitation/update/${invitationId}`, {\n        method: 'POST',\n        credentials: 'include',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ invitationId, status: \"rejected\" })\n      });\n  \n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n  \n      // Remove the rejected invitation from the invitations array\n      setInvitations(prevInvitations => prevInvitations.filter(invitation => invitation._id !== invitationId));\n      console.log(`Invitation with ID ${invitationId} rejected.`);\n    } catch (error) {\n      console.error('Error rejecting invitation:', error);\n    }\n  };\n  \n  \n  \n\n  const toggleFriendActive = async (id, isActive) => {\n    // Update the local state first\n    setFriends(friends.map(friend => {\n      if (friend._id === id) {\n        return { ...friend, isActive: !isActive };\n      }\n      return friend;\n    }));\n  \n    const endpoint = isActive ? `disallowfriend/${id}` : `allowfriend/${id}`;\n    \n    // Make API call to update friend's status on the server\n    try {\n      const response = await fetch(`http://localhost:5001/friends/${endpoint}`, {\n        method: 'POST', // Or the appropriate method for your endpoint\n        credentials: 'include',\n        headers: { 'Content-Type': 'application/json' },\n      });\n  \n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n  \n      // Handle the response here\n      const data = await response.json();\n      console.log('Friend status updated:', data);\n    } catch (error) {\n      console.error('Error updating friend status:', error);\n      \n      // Revert the state change if the API call failed\n      setFriends(friends.map(friend => {\n        if (friend._id === id) {\n          return { ...friend, isActive: isActive };\n        }\n        return friend;\n      }));\n    }\n  };\n  \n  \n\n\n  const handleInputChange = (event) => {\n    setUsername(event.target.value); \n  };\n\n  const removeFriend = async (friendId) => {\n\n    try {\n      const response = await fetch(`http://localhost:5001/friends/remove/${friendId}`, {\n        method: 'DELETE',\n        credentials: 'include',\n        headers: { 'Content-Type': 'application/json' },\n      });\n      setFriends(prevFriends => prevFriends.filter(friend => friend.id !== friendId));\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n  \n      const data = await response.json();\n      if (data.success) {\n        // Update state only if the API call was successful\n        setFriends(prevFriends => prevFriends.filter(friend => friend.id !== friendId));\n        console.log(`Friend with ID ${friendId} removed.`);\n      } else {\n        console.error('Error removing friend:', data.message);\n      }\n    } catch (error) {\n      console.error('Error removing friend:', error);\n    }\n    setFriendRemoved(true);\n  };\n  \n  \n\n  const handleSubmit = async () => {\n\n    // Check if the username is not empty and not already in the friends list\n    if (username && !friends.some(friend => friend.name === username)) {\n      try {\n        // Send an invitation to the target user\n        const targetUserId = username; // Assuming username is the target user ID\n        const response = await fetch(`http://localhost:5001/invitation/createInvitation/${targetUserId}`, {\n          method: 'POST',\n          credentials: 'include',\n          headers: { 'Content-Type': 'application/json' },\n        });\n  \n        if (!response.ok) {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n  \n        // Invitation sent successfully\n        console.log(`Invitation sent to user ${targetUserId}`);\n  \n        // You can update the UI to show that the invitation is sent here if needed\n  \n      } catch (error) {\n        console.error('Error sending invitation:', error);\n        return;\n      }\n  \n      // Clear the input field after sending the invitation\n      setUsername('');\n    }\n  };\n  \n\n  \n\n    // Navigate to profile page\n    const navigateToProfile = () => {\n      navigate(\"/friends\");\n    };\n  \n\n  \n    // Handle search input\n    const handleSearch = (event) => {\n      console.log(\"Searching for:\", event.target.value);\n      setSearch(event.target.value);\n    };\n\n\n  \n\n  // Sign out function\n  const handleSignOut = () => {\n    logout();\n    navigate('/');\n  };\n\n  // Navigate to profile page\n  const navigateToFriends = () => {\n    navigate(\"/friends\"); // Adjust the route as necessary\n  };\n\n  // Navigate to dashboard\n  const navigateToDashboard = () => {\n    navigate(\"/dashboard\");\n  };\n\n\n\n\n  return (\n    <div className=\"Dashboard\">\n      <Navbar2 sidebarOpen = {sidebarOpen} setSidebarOpen={setSidebarOpen} setSearch={setSearch}/>\n      <Sidebar isOpen={sidebarOpen} />\n\n      <main className={`main-content ${sidebarOpen ? \"shifted\" : \"\"}`}>\n      <div className=\"content-container\">\n        \n        <div className=\"friends-container\">\n        <h2 className=\"friends-heading\">Add a New Friend</h2>\n          <input\n            type=\"text\"\n            value={username}\n            onChange={handleInputChange}\n            placeholder=\"Enter your friend's username\"\n            className=\"add-friend-input\"\n          />\n          <button onClick={handleSubmit} className=\"add-friend-button\">\n            Add Friend\n          </button>\n\n\n                  <div className=\"friends-list\">\n            {friends.length === 0 ? (\n              <div className=\"no-friends-message\">\n                <h2>No friends added yet!</h2>\n                <p>Add a new friend using the input above.</p>\n              </div>\n            ) : (\n              friends.map((friend) => (\n                <div key={friend.id} className=\"friend-box\">\n                  <h1 className=\"text-box\">{friend.name}</h1>\n                  <div className=\"friend-actions\">\n                    <Tooltip title={friend.isActive ? \"Deactivate Recommendation\" : \"Activate Recommendation\"}>\n                      {friend.isActive ? (\n                        <ToggleOnIcon\n                          style={{ fontSize: '4rem' }} // Adjust the size as needed\n                          className=\"toggle-friend-btn active\"\n                          onClick={() => toggleFriendActive(friend._id, friend.isActive)}\n                        />\n                      ) : (\n                        <ToggleOffIcon\n                          style={{ fontSize: '4rem' }} // Adjust the size as needed\n                          className=\"toggle-friend-btn\"\n                          onClick={() => toggleFriendActive(friend._id, friend.isActive)}\n                        />\n                      )}\n                    </Tooltip>\n                    <Tooltip title=\"Remove Friend\">\n                      <button\n                        onClick={() => removeFriend(friend._id)}\n                        className=\"remove-friend-btn\"\n                        aria-label=\"Remove friend\"\n                      >\n                        <PersonRemoveIcon />\n                      </button>\n                    </Tooltip>\n                  </div>\n                </div>\n              ))\n            )}\n          </div>\n          \n        </div>\n\n        <div className=\"invitations-container\">\n        <h2 className=\"invitations-heading\">Incoming Friend Invitations</h2>\n        {invitations && invitations.length === 0 ? (\n          <p className=\"no-invitations-message\">No incoming invitations.</p>\n        ) : (\n          <div className=\"invitations-list\">\n  {invitations.map((invitation) => (\n    <div key={invitation._id} className=\"invitation-box\">\n      <span className=\"invitation-text\">Invitation from User ID: {invitation.user_id}</span>\n      <div className=\"invitation-actions\">\n        <button onClick={() => acceptInvitation(invitation._id)} className=\"invitation-accept-btn\">\n          Accept\n        </button>\n        <button onClick={() => rejectInvitation(invitation._id)} className=\"invitation-reject-btn\">\n          Reject\n        </button>\n      </div>\n    </div>\n  ))}\n</div>\n\n            )}\n          </div>\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default Friends;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}