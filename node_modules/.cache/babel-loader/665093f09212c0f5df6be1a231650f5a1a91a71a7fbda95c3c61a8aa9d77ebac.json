{"ast":null,"code":"var _jsxFileName = \"/Users/alioguzdogru/Downloads/Frontend/src/Components/Submission/Submission.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport DoneIcon from '@mui/icons-material/Done';\nimport Sidebar from \"../Sidebar/Sidebar\";\nimport jsonicon from \"../Assets/jsonicon.png\";\nimport ReactSelect from \"react-select\";\nimport \"./Submission.css\";\nimport Navbar2 from \"../Navbar2/Navbar2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Submission = () => {\n  _s();\n  const [sidebarOpen, setSidebarOpen] = useState(false);\n  const [submissionType, setSubmissionType] = useState(null);\n  const [search, setSearch] = useState(\"\");\n  const [songName, setSongName] = useState(\"\");\n  const [mainArtistName, setMainArtistName] = useState(\"\");\n  const [featuringArtistNames, setFeaturingArtistNames] = useState(\"\");\n  const [albumName, setAlbumName] = useState(\"\");\n  const [databaseURI, setDatabaseURI] = useState(\"\");\n  const [databaseName, setDatabaseName] = useState(\"\");\n  const [collectionName, setCollectionName] = useState(\"\");\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n  const [uploading, setUploading] = useState(false);\n  const [uploadSuccess, setUploadSuccess] = useState(false);\n  const [uploadError, setUploadError] = useState(false);\n  const [uploadProgress, setUploadProgress] = useState(0);\n\n  // Function to toggle dropdown state\n  const handleDropdownOpen = () => {\n    setIsDropdownOpen(true);\n  };\n  const handleDropdownClose = () => {\n    setIsDropdownOpen(false);\n  };\n\n  // Adjust the styles of the submission container based on the dropdown state\n  const submissionContainerStyle = {\n    top: isDropdownOpen ? '100px' : '5px',\n    // Adjust the top position when the dropdown is open\n    transition: 'top 0.3s ease' // Ensure the transition is smooth\n  };\n\n  const selectOptions = [{\n    value: 'Single Track',\n    label: 'Single Track'\n  }, {\n    value: 'Multiple Tracks',\n    label: 'Multiple Tracks'\n  }, {\n    value: 'Database URI',\n    label: 'Database URI'\n  }];\n  const customStyles = {\n    control: provided => ({\n      ...provided,\n      borderRadius: '10px',\n      backgroundColor: 'black',\n      borderColor: 'white',\n      color: 'white',\n      boxShadow: 'none',\n      // Removes the default box-shadow\n      '&:hover': {\n        borderColor: 'white' // Border color when hovering\n      }\n    }),\n\n    menu: provided => ({\n      ...provided,\n      borderRadius: '1px',\n      backgroundColor: 'black',\n      borderColor: 'white',\n      color: 'white',\n      overflow: 'hidden' // Ensures the rounded corners are respected\n    }),\n\n    option: (provided, state) => ({\n      ...provided,\n      backgroundColor: state.isFocused ? 'grey' : 'white',\n      // Background color when option is focused/hovered\n      color: state.isFocused ? 'black' : 'black',\n      // Text color when option is focused/hovered\n      borderRadius: '1px',\n      // Border radius for each option\n      '&:active': {\n        backgroundColor: '#8bbe52' // Background color when option is selected\n      }\n    }),\n\n    singleValue: provided => ({\n      ...provided,\n      color: 'white'\n    })\n  };\n  const handleFileSelect = event => {\n    const file = event.target.files[0];\n    if (file && file.type === \"application/json\") {\n      setSelectedFile(file);\n    } else {\n      alert(\"Please select a JSON file.\");\n    }\n  };\n  const handleDragOver = event => {\n    event.preventDefault();\n  };\n  const handleFileDrop = event => {\n    event.preventDefault();\n    const file = event.dataTransfer.files[0];\n    if (file && file.type === \"application/json\") {\n      setSelectedFile(file);\n    } else {\n      alert(\"Please drop a JSON file.\");\n    }\n  };\n  const handleSingleTrackSubmit = async () => {\n    // Prepare the data in the format your backend expects\n    setUploading(true);\n    setUploadSuccess(false);\n    setUploadError(false);\n    setUploadProgress(0);\n    const trackData = {\n      songName: songName,\n      mainArtistName: mainArtistName,\n      featuringArtistNames: featuringArtistNames ? featuringArtistNames.split(\",\").map(name => name.trim()) : [],\n      albumName: albumName\n    };\n    try {\n      console.log(trackData);\n      // Use your backend endpoint, adjust as necessary\n      const response = await fetch(\"http://localhost:5000/songs\", {\n        method: \"POST\",\n        credentials: \"include\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n          // If you're using an authorization token, include it here\n          // 'Authorization': 'Bearer YOUR_AUTH_TOKEN'\n        },\n\n        body: JSON.stringify(trackData)\n      });\n      if (response.ok) {\n        // Handle success, possibly clear the form or redirect the user\n        console.log(\"Track submitted successfully\");\n        setUploadSuccess(true);\n        setUploadProgress(100);\n        setTimeout(() => {\n          setUploading(false); // Hide the progress bar after a delay\n          setUploadSuccess(false);\n        }, 1000);\n      } else {\n        // If the server responds with an error, handle it here\n        throw new Error(\"Upload failed\");\n      }\n    } catch (error) {\n      // Handle network errors here\n      console.log(error);\n      setUploadError(true);\n      setTimeout(() => {\n        setUploading(false); // Hide the progress bar after a delay\n        setUploadError(false);\n      }, 1000);\n    }\n  };\n  //* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ *//\n  const handleFileSubmit = async () => {\n    // Prepare the data in the format your backend expects\n    setUploading(true);\n    setUploadSuccess(false);\n    setUploadError(false);\n    setUploadProgress(0);\n    try {\n      const formData = new FormData();\n      formData.append(\"file\", selectedFile);\n      // Use your backend endpoint, adjust as necessary\n      const response = await fetch(\"http://localhost:5000/upload-song-file\", {\n        method: \"POST\",\n        credentials: \"include\",\n        body: formData\n      });\n      if (response.ok) {\n        // Handle success, possibly clear the form or redirect the user\n        console.log(\"Track submitted successfully\");\n        setUploadSuccess(true);\n        setUploadProgress(100);\n        setTimeout(() => {\n          setUploading(false); // Hide the progress bar after a delay\n          setUploadSuccess(false);\n          handleDeleteFile();\n        }, 1000);\n      } else {\n        // If the server responds with an error, handle it here\n        throw new Error(\"Upload failed\");\n      }\n    } catch (error) {\n      // Handle network errors here\n      console.log(error);\n      setUploadError(true);\n      setTimeout(() => {\n        setUploading(false); // Hide the progress bar after a delay\n        setUploadError(false);\n        handleDeleteFile();\n      }, 1000);\n    }\n  };\n  //* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ *//\n  const handleTransferDatabase = async () => {\n    // Prepare the data in the format your backend expects\n    setUploading(true);\n    setUploadSuccess(false);\n    setUploadError(false);\n    setUploadProgress(0);\n    const databaseData = {\n      databaseURI: databaseURI,\n      databaseName: databaseName,\n      collectionName: collectionName\n    };\n    try {\n      console.log(databaseData);\n      // Use your backend endpoint, adjust as necessary\n      const response = await fetch(\"http://localhost:5000/transfer-songs\", {\n        method: \"POST\",\n        credentials: \"include\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n          // If you're using an authorization token, include it here\n          // 'Authorization': 'Bearer YOUR_AUTH_TOKEN'\n        },\n\n        body: JSON.stringify(databaseData)\n      });\n      if (response.ok) {\n        // Handle success, possibly clear the form or redirect the user\n        console.log(\"Track submitted successfully\");\n        setUploadSuccess(true);\n        setUploadProgress(100);\n        setTimeout(() => {\n          setUploading(false); // Hide the progress bar after a delay\n          setUploadSuccess(false);\n        }, 1000);\n      } else {\n        // If the server responds with an error, handle it here\n        throw new Error(\"Upload failed\");\n      }\n    } catch (error) {\n      // Handle network errors here\n      console.log(error);\n      setUploadError(true);\n      setTimeout(() => {\n        setUploading(false); // Hide the progress bar after a delay\n        setUploadError(false);\n      }, 1000);\n    }\n  };\n  /* document.addEventListener(\"DOMContentLoaded\", () => {\r\n    const btn = document.getElementById(\"btn1\");\r\n      if (btn) {\r\n      btn.addEventListener(\"click\", handleSignup);\r\n    }\r\n  }); */\n\n  const handleDeleteFile = () => {\n    const fileInput = document.getElementById('fileInput');\n    if (fileInput) {\n      fileInput.value = '';\n    }\n    setSelectedFile(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar2, {\n      sidebarOpen: sidebarOpen,\n      setSidebarOpen: setSidebarOpen,\n      setSearch: setSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Sidebar, {\n      isOpen: sidebarOpen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropdown-container\",\n        children: /*#__PURE__*/_jsxDEV(ReactSelect, {\n          styles: customStyles,\n          options: selectOptions,\n          value: selectOptions.find(option => option.value === submissionType),\n          onChange: selectedOption => setSubmissionType(selectedOption.value),\n          onMenuOpen: handleDropdownOpen,\n          onMenuClose: handleDropdownClose,\n          placeholder: \"Select Track Type\",\n          theme: theme => ({\n            ...theme,\n            borderRadius: 10,\n            colors: {\n              ...theme.colors,\n              primary25: 'grey',\n              // color when option is focused\n              primary: 'black' // border color when focused\n            }\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 9\n      }, this), submissionType === null && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"submission-container\",\n        style: submissionContainerStyle,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text\",\n          children: \"Welcome to Our Song Recommendation Service\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"underline\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"recommendation-message\",\n          children: \"Welcome to our Song Recommendation Service! We're here to help you discover new music, but we need your help to make our recommendations even better. Add your favorite songs to our database, and we'll use that information to suggest the perfect tracks for your taste. Choose an option from the dropdown above to get started!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"underline\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"instruction-text\",\n          children: \"Select your way of adding songs with button above:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 11\n      }, this), submissionType === \"Single Track\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"submission-container\",\n        style: submissionContainerStyle,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text\",\n          children: \"Upload Single Track\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"underline\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"track-details-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Song Name\",\n            className: \"track-input\",\n            value: songName,\n            onChange: e => setSongName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Main Artist Name\",\n            className: \"track-input\",\n            value: mainArtistName,\n            onChange: e => setMainArtistName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Featuring Artist Names\",\n            className: \"track-input\",\n            value: featuringArtistNames,\n            onChange: e => setFeaturingArtistNames(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Album Name\",\n            className: \"track-input\",\n            value: albumName,\n            onChange: e => setAlbumName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 13\n        }, this), !uploading && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"submission-actions\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSingleTrackSubmit,\n            children: \"Upload Track\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 13\n        }, this), uploading && !uploadSuccess && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loader\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 15\n        }, this), uploadSuccess && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(DoneIcon, {\n            className: \"material-icons success-icon\",\n            children: \"check_circle\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"success-message\",\n            children: \"Uploaded Successfully\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 15\n        }, this), uploadError && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: 'red'\n            },\n            children: \"Cannot make an upload. Please try again.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 11\n      }, this), submissionType === \"Multiple Tracks\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"submission-container\",\n        style: submissionContainerStyle,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text\",\n          children: \"Upload Multiple Tracks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"underline\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"file-submission\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"file-controls\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              id: \"fileInput\",\n              style: {\n                display: \"none\"\n              },\n              onChange: handleFileSelect,\n              accept: \".json\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 391,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"fileInput\",\n              className: \"btn file-btn\",\n              children: \"Add Folder\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 398,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn file-btn\",\n              onClick: handleDeleteFile,\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 401,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"file-drag-area\",\n            onDragOver: handleDragOver,\n            onDrop: handleFileDrop,\n            children: [selectedFile ? /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: jsonicon,\n                alt: \"Logo\",\n                className: \"jsnicon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 413,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: selectedFile.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 414,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 412,\n              columnNumber: 19\n            }, this) : \"Drag & Drop JSON File Here\", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Include multiple tracks in a single JSON file.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 419,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"file-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Accepted file type: JSON .json\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 422,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Maximum file size: 100 MB\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 423,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 421,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 13\n        }, this), !uploading && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"submission-actions\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleFileSubmit,\n            children: \"File Upload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 428,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 13\n        }, this), uploading && !uploadSuccess && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loader\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 15\n        }, this), uploadSuccess && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(DoneIcon, {\n            className: \"material-icons success-icon\",\n            children: \"check_circle\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 438,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"success-message\",\n            children: \"Uploaded Successfully\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 439,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 437,\n          columnNumber: 15\n        }, this), uploadError && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: 'red'\n            },\n            children: \"Cannot make an upload. Please try again.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 445,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 11\n      }, this), submissionType === \"Database URI\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"submission-container\",\n        style: submissionContainerStyle,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text\",\n          children: \"Database URI\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"underline\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 455,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"track-details-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Database URI\",\n            className: \"track-input\",\n            value: databaseURI,\n            onChange: e => setDatabaseURI(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 458,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Database Name\",\n            className: \"track-input\",\n            value: databaseName,\n            onChange: e => setDatabaseName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 465,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Collection Name\",\n            className: \"track-input\",\n            value: collectionName,\n            onChange: e => setCollectionName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 472,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 13\n        }, this), !uploading && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"submission-actions\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleTransferDatabase,\n            children: \"Transfer Database\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 482,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 13\n        }, this), uploading && !uploadSuccess && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loader\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 489,\n          columnNumber: 15\n        }, this), uploadSuccess && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(DoneIcon, {\n            className: \"material-icons success-icon\",\n            children: \"check_circle\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 494,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"success-message\",\n            children: \"Uploaded Successfully\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 495,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 493,\n          columnNumber: 15\n        }, this), uploadError && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: 'red'\n            },\n            children: \"Cannot make an upload. Please try again.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 501,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 500,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 453,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: `main-content ${sidebarOpen ? \"shifted\" : \"\"}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 509,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 278,\n    columnNumber: 5\n  }, this);\n};\n_s(Submission, \"gwxFv22ZMIbinrJ9XFmSk2ZTZZo=\");\n_c = Submission;\nexport default Submission;\nvar _c;\n$RefreshReg$(_c, \"Submission\");","map":{"version":3,"names":["React","useState","DoneIcon","Sidebar","jsonicon","ReactSelect","Navbar2","jsxDEV","_jsxDEV","Submission","_s","sidebarOpen","setSidebarOpen","submissionType","setSubmissionType","search","setSearch","songName","setSongName","mainArtistName","setMainArtistName","featuringArtistNames","setFeaturingArtistNames","albumName","setAlbumName","databaseURI","setDatabaseURI","databaseName","setDatabaseName","collectionName","setCollectionName","selectedFile","setSelectedFile","isDropdownOpen","setIsDropdownOpen","uploading","setUploading","uploadSuccess","setUploadSuccess","uploadError","setUploadError","uploadProgress","setUploadProgress","handleDropdownOpen","handleDropdownClose","submissionContainerStyle","top","transition","selectOptions","value","label","customStyles","control","provided","borderRadius","backgroundColor","borderColor","color","boxShadow","menu","overflow","option","state","isFocused","singleValue","handleFileSelect","event","file","target","files","type","alert","handleDragOver","preventDefault","handleFileDrop","dataTransfer","handleSingleTrackSubmit","trackData","split","map","name","trim","console","log","response","fetch","method","credentials","headers","body","JSON","stringify","ok","setTimeout","Error","error","handleFileSubmit","formData","FormData","append","handleDeleteFile","handleTransferDatabase","databaseData","fileInput","document","getElementById","className","children","fileName","_jsxFileName","lineNumber","columnNumber","isOpen","styles","options","find","onChange","selectedOption","onMenuOpen","onMenuClose","placeholder","theme","colors","primary25","primary","style","e","onClick","id","display","accept","htmlFor","onDragOver","onDrop","src","alt","_c","$RefreshReg$"],"sources":["/Users/alioguzdogru/Downloads/Frontend/src/Components/Submission/Submission.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport DoneIcon from '@mui/icons-material/Done';\r\nimport Sidebar from \"../Sidebar/Sidebar\";\r\nimport jsonicon from \"../Assets/jsonicon.png\";\r\nimport ReactSelect from \"react-select\";\r\nimport \"./Submission.css\";\r\nimport Navbar2 from \"../Navbar2/Navbar2\";\r\n\r\n\r\n\r\nconst Submission = () => {\r\n  const [sidebarOpen, setSidebarOpen] = useState(false);\r\n  const [submissionType, setSubmissionType] = useState(null);\r\n  const [search, setSearch] = useState(\"\");\r\n  \r\n\r\n  const [songName, setSongName] = useState(\"\");\r\n  const [mainArtistName, setMainArtistName] = useState(\"\");\r\n  const [featuringArtistNames, setFeaturingArtistNames] = useState(\"\");\r\n  const [albumName, setAlbumName] = useState(\"\");\r\n  const [databaseURI, setDatabaseURI] = useState(\"\");\r\n  const [databaseName, setDatabaseName] = useState(\"\");\r\n  const [collectionName, setCollectionName] = useState(\"\");\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n\r\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\r\n\r\n  const [uploading, setUploading] = useState(false);\r\n  const [uploadSuccess, setUploadSuccess] = useState(false);\r\n  const [uploadError, setUploadError] = useState(false);\r\n  const [uploadProgress, setUploadProgress] = useState(0);\r\n\r\n\r\n\r\n  // Function to toggle dropdown state\r\n  const handleDropdownOpen = () => {\r\n    setIsDropdownOpen(true);\r\n  };\r\n\r\n  const handleDropdownClose = () => {\r\n    setIsDropdownOpen(false);\r\n  };\r\n\r\n  // Adjust the styles of the submission container based on the dropdown state\r\n  const submissionContainerStyle = {\r\n    top: isDropdownOpen ? '100px' : '5px', // Adjust the top position when the dropdown is open\r\n    transition: 'top 0.3s ease', // Ensure the transition is smooth\r\n  };\r\n\r\n  const selectOptions = [\r\n    { value: 'Single Track', label: 'Single Track' },\r\n    { value: 'Multiple Tracks', label: 'Multiple Tracks' },\r\n    { value: 'Database URI', label: 'Database URI' },\r\n  ];  \r\n\r\n  const customStyles = {\r\n    control: (provided) => ({\r\n      ...provided,\r\n      borderRadius: '10px',\r\n      backgroundColor: 'black',\r\n      borderColor: 'white',\r\n      color: 'white',\r\n      boxShadow: 'none', // Removes the default box-shadow\r\n      '&:hover': {\r\n        borderColor: 'white', // Border color when hovering\r\n      }\r\n    }),\r\n    menu: (provided) => ({\r\n      ...provided,\r\n      borderRadius: '1px',\r\n      backgroundColor: 'black',\r\n      borderColor: 'white',\r\n      color: 'white',\r\n      overflow: 'hidden', // Ensures the rounded corners are respected\r\n    }),\r\n    option: (provided, state) => ({\r\n      ...provided,\r\n      backgroundColor: state.isFocused ? 'grey' : 'white', // Background color when option is focused/hovered\r\n      color: state.isFocused ? 'black' : 'black', // Text color when option is focused/hovered\r\n      borderRadius: '1px', // Border radius for each option\r\n      '&:active': {\r\n        backgroundColor: '#8bbe52', // Background color when option is selected\r\n      }\r\n    }),\r\n    singleValue: (provided) => ({\r\n      ...provided,\r\n      color: 'white',\r\n    }),\r\n  };\r\n\r\n  const handleFileSelect = (event) => {\r\n    const file = event.target.files[0];\r\n    if (file && file.type === \"application/json\") {\r\n      setSelectedFile(file);\r\n    } else {\r\n      alert(\"Please select a JSON file.\");\r\n    }\r\n  };\r\n\r\n  const handleDragOver = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  const handleFileDrop = (event) => {\r\n    event.preventDefault();\r\n    const file = event.dataTransfer.files[0];\r\n    if (file && file.type === \"application/json\") {\r\n      setSelectedFile(file);\r\n    } else {\r\n      alert(\"Please drop a JSON file.\");\r\n    }\r\n  };\r\n\r\n  const handleSingleTrackSubmit = async () => {\r\n    // Prepare the data in the format your backend expects\r\n    setUploading(true);\r\n    setUploadSuccess(false);\r\n    setUploadError(false);\r\n    setUploadProgress(0);\r\n    const trackData = {\r\n      songName: songName,\r\n      mainArtistName: mainArtistName,\r\n      featuringArtistNames: featuringArtistNames\r\n        ? featuringArtistNames.split(\",\").map((name) => name.trim())\r\n        : [],\r\n      albumName: albumName,\r\n    };\r\n\r\n    try {\r\n      console.log(trackData);\r\n      // Use your backend endpoint, adjust as necessary\r\n      const response = await fetch(\"http://localhost:5000/songs\", {\r\n        method: \"POST\",\r\n        credentials: \"include\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          // If you're using an authorization token, include it here\r\n          // 'Authorization': 'Bearer YOUR_AUTH_TOKEN'\r\n        },\r\n        body: JSON.stringify(trackData),\r\n      });\r\n\r\n      if (response.ok) {\r\n        // Handle success, possibly clear the form or redirect the user\r\n        console.log(\"Track submitted successfully\");\r\n        setUploadSuccess(true);\r\n        setUploadProgress(100);\r\n        setTimeout(() => {\r\n          setUploading(false); // Hide the progress bar after a delay\r\n          setUploadSuccess(false);\r\n        }, 1000);\r\n      } else {\r\n        // If the server responds with an error, handle it here\r\n        throw new Error(\"Upload failed\");\r\n      }\r\n\r\n    } catch (error) {\r\n      // Handle network errors here\r\n      console.log(error);\r\n      setUploadError(true);\r\n      setTimeout(() => {\r\n        setUploading(false); // Hide the progress bar after a delay\r\n        setUploadError(false);\r\n      }, 1000);\r\n    }\r\n  };\r\n  //* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ *//\r\n  const handleFileSubmit = async () => {\r\n    // Prepare the data in the format your backend expects\r\n    setUploading(true);\r\n    setUploadSuccess(false);\r\n    setUploadError(false);\r\n    setUploadProgress(0);\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append(\"file\", selectedFile);\r\n      // Use your backend endpoint, adjust as necessary\r\n      const response = await fetch(\"http://localhost:5000/upload-song-file\", {\r\n        method: \"POST\",\r\n        credentials: \"include\",\r\n\r\n        body: formData,\r\n      });\r\n\r\n      if (response.ok) {\r\n        // Handle success, possibly clear the form or redirect the user\r\n        console.log(\"Track submitted successfully\");\r\n        setUploadSuccess(true);\r\n        setUploadProgress(100);\r\n        setTimeout(() => {\r\n          setUploading(false); // Hide the progress bar after a delay\r\n          setUploadSuccess(false);\r\n          handleDeleteFile();\r\n        }, 1000);\r\n      } else {\r\n        // If the server responds with an error, handle it here\r\n        throw new Error(\"Upload failed\");\r\n      }\r\n    } catch (error) {\r\n      // Handle network errors here\r\n      console.log(error);\r\n      setUploadError(true);\r\n      setTimeout(() => {\r\n        setUploading(false); // Hide the progress bar after a delay\r\n        setUploadError(false);\r\n        handleDeleteFile();\r\n      }, 1000);\r\n    }\r\n  };\r\n  //* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ *//\r\n  const handleTransferDatabase = async () => {\r\n    // Prepare the data in the format your backend expects\r\n    setUploading(true);\r\n    setUploadSuccess(false);\r\n    setUploadError(false);\r\n    setUploadProgress(0);\r\n    const databaseData = {\r\n      databaseURI: databaseURI,\r\n      databaseName: databaseName,\r\n      collectionName: collectionName,\r\n    };\r\n\r\n    try {\r\n      console.log(databaseData);\r\n      // Use your backend endpoint, adjust as necessary\r\n      const response = await fetch(\"http://localhost:5000/transfer-songs\", {\r\n        method: \"POST\",\r\n        credentials: \"include\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          // If you're using an authorization token, include it here\r\n          // 'Authorization': 'Bearer YOUR_AUTH_TOKEN'\r\n        },\r\n        body: JSON.stringify(databaseData),\r\n      });\r\n\r\n      if (response.ok) {\r\n        // Handle success, possibly clear the form or redirect the user\r\n        console.log(\"Track submitted successfully\");\r\n        setUploadSuccess(true);\r\n        setUploadProgress(100);\r\n        setTimeout(() => {\r\n          setUploading(false); // Hide the progress bar after a delay\r\n          setUploadSuccess(false);\r\n        }, 1000);\r\n      } else {\r\n        // If the server responds with an error, handle it here\r\n        throw new Error(\"Upload failed\");\r\n      }\r\n    } catch (error) {\r\n      // Handle network errors here\r\n      console.log(error);\r\n      setUploadError(true);\r\n      setTimeout(() => {\r\n        setUploading(false); // Hide the progress bar after a delay\r\n        setUploadError(false);\r\n      }, 1000);\r\n    }\r\n  };\r\n  /* document.addEventListener(\"DOMContentLoaded\", () => {\r\n    const btn = document.getElementById(\"btn1\");\r\n\r\n    if (btn) {\r\n      btn.addEventListener(\"click\", handleSignup);\r\n    }\r\n  }); */\r\n\r\n\r\n  const handleDeleteFile = () => {\r\n    const fileInput = document.getElementById('fileInput');\r\n    if (fileInput) {\r\n      fileInput.value = '';\r\n    }\r\n    setSelectedFile(null);\r\n  };\r\n\r\n  return (\r\n    <div className=\"Dashboard\">\r\n      <Navbar2 sidebarOpen={sidebarOpen} setSidebarOpen={setSidebarOpen} setSearch ={setSearch}/>\r\n\r\n      <Sidebar isOpen={sidebarOpen} />\r\n\r\n      <div className=\"center-container\">\r\n        \r\n        <div className=\"dropdown-container\">\r\n          <ReactSelect\r\n            styles={customStyles}\r\n            options={selectOptions}\r\n            value={selectOptions.find(option => option.value === submissionType)}\r\n            onChange={(selectedOption) => setSubmissionType(selectedOption.value)}\r\n            onMenuOpen={handleDropdownOpen}\r\n            onMenuClose={handleDropdownClose}\r\n            placeholder=\"Select Track Type\"\r\n            theme={(theme) => ({\r\n              ...theme,\r\n              borderRadius: 10,\r\n              colors: {\r\n                ...theme.colors,\r\n                primary25: 'grey', // color when option is focused\r\n                primary: 'black', // border color when focused\r\n              },\r\n            })}\r\n          />\r\n        </div>\r\n\r\n        {submissionType === null && (\r\n          <div className=\"submission-container\" style={submissionContainerStyle}>\r\n            <div className=\"text\">Welcome to Our Song Recommendation Service</div>\r\n            <div className=\"underline\"></div>\r\n\r\n            <p className=\"recommendation-message\">\r\n              Welcome to our Song Recommendation Service! We're here to help you discover new music,\r\n              but we need your help to make our recommendations even better. \r\n              Add your favorite songs to our database, and we'll use that information to suggest the perfect tracks for your taste. \r\n              Choose an option from the dropdown above to get started!\r\n            </p>\r\n            <div className=\"underline\"></div>\r\n            <p className=\"instruction-text\">Select your way of adding songs with button above:</p>\r\n          </div>\r\n        )}\r\n\r\n        {submissionType === \"Single Track\" && (\r\n          <div className=\"submission-container\" style={submissionContainerStyle}>\r\n            <div className=\"text\">Upload Single Track</div>\r\n            <div className=\"underline\"></div>\r\n\r\n            <div className=\"track-details-form\">\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Song Name\"\r\n                className=\"track-input\"\r\n                value={songName}\r\n                onChange={(e) => setSongName(e.target.value)}\r\n              />\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Main Artist Name\"\r\n                className=\"track-input\"\r\n                value={mainArtistName}\r\n                onChange={(e) => setMainArtistName(e.target.value)}\r\n              />\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Featuring Artist Names\"\r\n                className=\"track-input\"\r\n                value={featuringArtistNames}\r\n                onChange={(e) => setFeaturingArtistNames(e.target.value)}\r\n              />\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Album Name\"\r\n                className=\"track-input\"\r\n                value={albumName}\r\n                onChange={(e) => setAlbumName(e.target.value)}\r\n              />\r\n            </div>\r\n\r\n            {!uploading && (\r\n            <div className=\"submission-actions\">\r\n              <button onClick={handleSingleTrackSubmit}>Upload Track</button>\r\n            </div>\r\n            )}\r\n\r\n            {uploading && !uploadSuccess && (\r\n              <div className=\"loader\"></div>\r\n            )}\r\n\r\n            {uploadSuccess && (\r\n              <div>\r\n                <DoneIcon className=\"material-icons success-icon\">check_circle</DoneIcon>\r\n                <div className=\"success-message\">Uploaded Successfully</div>\r\n              </div>\r\n            )}\r\n\r\n            {uploadError && (\r\n              <div>\r\n                <span style={{ color: 'red' }}>Cannot make an upload. Please try again.</span>\r\n              </div>\r\n            )}\r\n\r\n          </div>\r\n        )}\r\n\r\n        {submissionType === \"Multiple Tracks\" && (\r\n          <div className=\"submission-container\" style={submissionContainerStyle}>\r\n            <div className=\"text\">Upload Multiple Tracks</div>\r\n            <div className=\"underline\"></div>\r\n\r\n            <div className=\"file-submission\">\r\n              <div className=\"file-controls\">\r\n                <input\r\n                  type=\"file\"\r\n                  id=\"fileInput\"\r\n                  style={{ display: \"none\" }}\r\n                  onChange={handleFileSelect}\r\n                  accept=\".json\"\r\n                />\r\n                <label htmlFor=\"fileInput\" className=\"btn file-btn\">\r\n                  Add Folder\r\n                </label>\r\n                <button className=\"btn file-btn\" onClick={handleDeleteFile}>\r\n                  Delete\r\n                </button>\r\n              </div>\r\n              <div\r\n                className=\"file-drag-area\"\r\n                onDragOver={handleDragOver}\r\n                onDrop={handleFileDrop}\r\n              >\r\n                {selectedFile ? (\r\n                  \r\n                  <p>\r\n                    <img src={jsonicon} alt=\"Logo\" className=\"jsnicon\" />\r\n                    <div>{selectedFile.name}</div>\r\n                  </p>\r\n                ) : (\r\n                  \"Drag & Drop JSON File Here\"\r\n                )}\r\n                <span>Include multiple tracks in a single JSON file.</span>\r\n              </div>\r\n              <div className=\"file-info\">\r\n                <span>Accepted file type: JSON .json</span>\r\n                <span>Maximum file size: 100 MB</span>\r\n              </div>\r\n            </div>\r\n            {!uploading && (        \r\n            <div className=\"submission-actions\">\r\n              <button onClick={handleFileSubmit}>File Upload</button>\r\n            </div>\r\n            )}\r\n\r\n            {uploading && !uploadSuccess && (\r\n              <div className=\"loader\"></div>\r\n            )}\r\n\r\n            {uploadSuccess && (\r\n              <div>\r\n                <DoneIcon className=\"material-icons success-icon\">check_circle</DoneIcon>\r\n                <div className=\"success-message\">Uploaded Successfully</div>\r\n              </div>\r\n            )}\r\n\r\n            {uploadError && (\r\n              <div>\r\n                <span style={{ color: 'red' }}>Cannot make an upload. Please try again.</span>\r\n              </div>\r\n            )}\r\n\r\n          </div>\r\n        )}\r\n\r\n        {submissionType === \"Database URI\" && (\r\n          <div className=\"submission-container\" style={submissionContainerStyle}>\r\n            <div className=\"text\">Database URI</div>\r\n            <div className=\"underline\"></div>\r\n\r\n            <div className=\"track-details-form\">\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Database URI\"\r\n                className=\"track-input\"\r\n                value={databaseURI}\r\n                onChange={(e) => setDatabaseURI(e.target.value)}\r\n              />\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Database Name\"\r\n                className=\"track-input\"\r\n                value={databaseName}\r\n                onChange={(e) => setDatabaseName(e.target.value)}\r\n              />\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Collection Name\"\r\n                className=\"track-input\"\r\n                value={collectionName}\r\n                onChange={(e) => setCollectionName(e.target.value)}\r\n              />\r\n            </div>\r\n            {!uploading && (  \r\n            <div className=\"submission-actions\">\r\n              <button onClick={handleTransferDatabase}>\r\n                Transfer Database\r\n              </button>\r\n            </div>\r\n            )}\r\n\r\n            {uploading && !uploadSuccess && (\r\n              <div className=\"loader\"></div>\r\n            )}\r\n\r\n            {uploadSuccess && (\r\n              <div>\r\n                <DoneIcon className=\"material-icons success-icon\">check_circle</DoneIcon>\r\n                <div className=\"success-message\">Uploaded Successfully</div>\r\n              </div>\r\n            )}\r\n\r\n            {uploadError && (\r\n              <div>\r\n                <span style={{ color: 'red' }}>Cannot make an upload. Please try again.</span>\r\n              </div>\r\n            )}\r\n\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <main className={`main-content ${sidebarOpen ? \"shifted\" : \"\"}`}>\r\n        {/* Your main app content here */}\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Submission;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}